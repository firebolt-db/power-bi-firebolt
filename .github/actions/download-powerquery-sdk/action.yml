name: 'Download PowerQuery SDK'
description: 'Downloads and extracts the PowerQuery SDK NuGet package'
inputs:
  output-directory:
    description: 'Directory to extract the package to'
    required: false
    default: 'nuget_packages'
outputs:
  pqtest-path:
    description: 'Path to PQTest.exe'
    value: ${{ steps.install-pqtest.outputs.pqtest-path }}
  sdk-path:
    description: 'Path to the SDK directory'
    value: ${{ steps.install-pqtest.outputs.sdk-path }}
runs:
  using: 'composite'
  steps:
    - name: Download PowerQuery SDK nuget package and extract
      id: install-pqtest
      shell: powershell
      run: |
        $nugetPath = "$env:TEMP\nuget.exe"
        Write-Host "Downloading nuget.exe..."
        Invoke-WebRequest -Uri "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile $nugetPath

        $packageId = "Microsoft.PowerQuery.SdkTools"
        $outputDir = "${{ github.workspace }}\${{ inputs.output-directory }}"

        # Get the latest version of the package
        Write-Host "Finding latest version of $packageId..."
        $listOutput = & $nugetPath list $packageId -Source nuget.org -PreRelease
        $latestVersion = ($listOutput | Where-Object { $_ -match "^$packageId\s+(.+)$" } | ForEach-Object { $Matches[1] }) | Select-Object -First 1

        Write-Host "Latest version found: $latestVersion"
        & $nugetPath install $packageId -Version $latestVersion -OutputDirectory $outputDir -Source nuget.org
        
        # Find the installed package directory
        $packageDir = Get-ChildItem "$outputDir\$packageId.*" -Directory | Sort-Object Name -Descending | Select-Object -First 1

        Write-Host "Package installed at: $($packageDir.FullName)"
        
        # Find the tools directory with PQTest.exe and its dependencies
        $toolsDir = Join-Path $packageDir.FullName "tools"
        $pqTestSource = Join-Path $toolsDir "PQTest.exe"

        if (-not (Test-Path $pqTestSource)) {
          Write-Host "PQTest.exe not found in tools directory: $toolsDir" -ForegroundColor Red
          exit 1
        }
        
        # Use PQTest.exe from its original location to ensure all dependencies are available
        echo "pqtest-path=$pqTestSource" >> $env:GITHUB_OUTPUT
        echo "sdk-path=$($packageDir.FullName)" >> $env:GITHUB_OUTPUT
